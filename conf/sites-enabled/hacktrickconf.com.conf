# proxy handle
upstream django {
    server 127.0.0.1:32000;
    keepalive 64;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name hacktrickconf.com;
	root /var/www/hacktrickconf.com/public;

	index index.html;

	# SSL
	include _ssl.conf;
	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	# django path and cache
 	location / {
        uwsgi_pass  django;
        include     /etc/nginx/uwsgi_params;
		uwsgi_cache STATIC;
        uwsgi_cache_key $uri;
        uwsgi_cache_valid 200 301 302 30m;
		uwsgi_cache_valid 404 1m;
		uwsgi_cache_valid any 5m;
		uwsgi_hide_header Set-Cookie;
		uwsgi_ignore_headers X-Accel-Expires Expires Cache-Control;
		uwsgi_ignore_headers Set-Cookie;
		uwsgi_set_header X-Real-IP $remote_addr;
		uwsgi_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		uwsgi_set_header Host $http_host;
		expires 10m;
    }

	# disable uwsgi cache
	location ~ ^/(?:accounts|logout) { 
        uwsgi_set_header X-Real-IP $remote_addr;
        uwsgi_set_header Host $http_host;
        uwsgi_pass  django;
        add_header Cache-Control "no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0";
    }

	include _general.conf;
}

# subdomains redirect
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name *.hacktrickconf.com;

	# SSL
	include _ssl.conf;
	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	return 301 https://hacktrickconf.com$request_uri;
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	server_name .hacktrickconf.com;

	return 301 https://hacktrickconf.com$request_uri;
}
